name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test_and_push:
    name: k3s-infra CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Set Image Tag based on Docker Hub latest tag
#        id: set_image_tag
#        run: |
#          LATEST_TAG=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKER_TOKEN }}" "https://hub.docker.com/v2/repositories/jungeunyoon/k3s-infra/tags?page_size=1" | jq -r '.results[0].name')
#          if [ -z "$LATEST_TAG" ]; then
#            LATEST_TAG="0.0.0"
#          fi
#          echo "Latest tag from Docker Hub: $LATEST_TAG"
#          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
#          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
#          PATCH=$(echo $LATEST_TAG | cut -d. -f3)
#          if [ "${{ github.ref_name }}" == "main" ]; then
#            PATCH=$((PATCH + 1))
#            IMAGE_TAG="1.0.$PATCH"
#          else
#            PATCH=$((PATCH + 1))
#            IMAGE_TAG="0.0.$PATCH"
#          fi
#          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
#          echo "Next image tag: $IMAGE_TAG"
#
#      - name: Build and push Docker image
#        run: |
#          docker build -t jungeunyoon/k3s-infra:${{ env.IMAGE_TAG }}
#          docker push jungeunyoon/k3s-infra:${{ env.IMAGE_TAG }}

      - name: Create output
        run: sh ./build.sh

      - name: Pushes to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PUSH_TOKEN }}
        with:
          source-directory: 'output'
          destination-github-username: 'Stockly-Project'
          destination-repository-name: 'K3s-Infra'
          user-email: ${{ secrets.EMAIL }}
          commit-message: ${{ github.event.head_commit.message }}
          target-branch: 'main'

      # 6. 테스트: 푸시 후 변수 확인
      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY
